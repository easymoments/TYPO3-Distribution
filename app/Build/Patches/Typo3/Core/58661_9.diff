From 5e154bc34beae67fdd2573b526460304d09ac392 Mon Sep 17 00:00:00 2001
From: Thorben Nissen <thorben.nissen@kapp-hamburg.de>
Date: Fri, 19 Oct 2018 11:03:58 +0200
Subject: [PATCH] [BUGFIX] Avoid overwriting page context in TSFE->cObj by f:cObject

Change `CObjectViewHelper::getContentObjectRenderer` to return a new
instance of `ContentObjectRenderer` instead of returning a reference to
`TSFE->cObj`.

Change unit test and add prepared instance of `ContentObjectRenderer`
to `GeneralUtility` via `addInstance` method.

Resolves: #86979
Releases: master
Change-Id: Ibdb8fd1d974a525f3583929a743447a8650ca1ab
---

diff --git a/typo3/sysext/fluid/Classes/ViewHelpers/CObjectViewHelper.php b/typo3/sysext/fluid/Classes/ViewHelpers/CObjectViewHelper.php
index e2332ff..b7a5733 100644
--- a/typo3/sysext/fluid/Classes/ViewHelpers/CObjectViewHelper.php
+++ b/typo3/sysext/fluid/Classes/ViewHelpers/CObjectViewHelper.php
@@ -17,7 +17,9 @@
 use TYPO3\CMS\Core\Utility\GeneralUtility;
 use TYPO3\CMS\Extbase\Configuration\ConfigurationManagerInterface;
 use TYPO3\CMS\Extbase\Object\ObjectManager;
+use TYPO3\CMS\Extbase\Reflection\ObjectAccess;
 use TYPO3\CMS\Frontend\ContentObject\ContentObjectRenderer;
+use TYPO3\CMS\Frontend\Controller\TypoScriptFrontendController;
 use TYPO3Fluid\Fluid\Core\Rendering\RenderingContextInterface;
 use TYPO3Fluid\Fluid\Core\ViewHelper\AbstractViewHelper;
 use TYPO3Fluid\Fluid\Core\ViewHelper\Traits\CompileWithContentArgumentAndRenderStatic;
@@ -68,11 +70,6 @@
     protected $escapeOutput = false;
 
     /**
-     * @var \TYPO3\CMS\Frontend\Controller\TypoScriptFrontendController contains a backup of the current $GLOBALS['TSFE'] if used in BE mode
-     */
-    protected static $tsfeBackup;
-
-    /**
      * Initialize arguments.
      *
      * @throws \TYPO3Fluid\Fluid\Core\ViewHelper\Exception
@@ -96,18 +93,14 @@
      */
     public static function renderStatic(array $arguments, \Closure $renderChildrenClosure, RenderingContextInterface $renderingContext)
     {
-        $content = '';
         $data = $renderChildrenClosure();
         $typoscriptObjectPath = $arguments['typoscriptObjectPath'];
         $currentValueKey = $arguments['currentValueKey'];
         $table = $arguments['table'];
         $contentObjectRenderer = static::getContentObjectRenderer();
-        if (TYPO3_MODE === 'BE') {
-            static::simulateFrontendEnvironment();
-        }
         $currentValue = null;
         if (is_object($data)) {
-            $data = \TYPO3\CMS\Extbase\Reflection\ObjectAccess::getGettableProperties($data);
+            $data = ObjectAccess::getGettableProperties($data);
         } elseif (is_string($data) || is_numeric($data)) {
             $currentValue = (string)$data;
             $data = [$data];
@@ -137,9 +130,6 @@
             );
         }
         $content = $contentObjectRenderer->cObjGetSingle($setup[$lastSegment], $setup[$lastSegment . '.'] ?? []);
-        if (TYPO3_MODE === 'BE') {
-            static::resetFrontendEnvironment();
-        }
         return $content;
     }
 
@@ -156,28 +146,9 @@
      */
     protected static function getContentObjectRenderer()
     {
-        return $GLOBALS['TSFE']->cObj;
-    }
-
-    /**
-     * Sets the $TSFE->cObjectDepthCounter in Backend mode
-     * This somewhat hacky work around is currently needed because the cObjGetSingle() function of \TYPO3\CMS\Frontend\ContentObject\ContentObjectRenderer relies on this setting
-     */
-    protected static function simulateFrontendEnvironment()
-    {
-        static::$tsfeBackup = $GLOBALS['TSFE'] ?? null;
-        $GLOBALS['TSFE'] = new \stdClass();
-        $GLOBALS['TSFE']->cObj = GeneralUtility::makeInstance(ContentObjectRenderer::class);
-        $GLOBALS['TSFE']->cObjectDepthCounter = 100;
-    }
-
-    /**
-     * Resets $GLOBALS['TSFE'] if it was previously changed by simulateFrontendEnvironment()
-     *
-     * @see simulateFrontendEnvironment()
-     */
-    protected static function resetFrontendEnvironment()
-    {
-        $GLOBALS['TSFE'] = static::$tsfeBackup;
+        return GeneralUtility::makeInstance(
+            ContentObjectRenderer::class,
+            $GLOBALS['TSFE'] ?? GeneralUtility::makeInstance(TypoScriptFrontendController::class, null, 0, 0)
+        );
     }
 }
diff --git a/typo3/sysext/fluid/Tests/Unit/ViewHelpers/CObjectViewHelperTest.php b/typo3/sysext/fluid/Tests/Unit/ViewHelpers/CObjectViewHelperTest.php
index a411c24..6eb19c6 100644
--- a/typo3/sysext/fluid/Tests/Unit/ViewHelpers/CObjectViewHelperTest.php
+++ b/typo3/sysext/fluid/Tests/Unit/ViewHelpers/CObjectViewHelperTest.php
@@ -21,6 +21,7 @@
 use TYPO3\CMS\Extbase\Object\ObjectManager;
 use TYPO3\CMS\Fluid\ViewHelpers\CObjectViewHelper;
 use TYPO3\CMS\Frontend\ContentObject\ContentObjectRenderer;
+use TYPO3\CMS\Frontend\Controller\TypoScriptFrontendController;
 use TYPO3\TestingFramework\Fluid\Unit\ViewHelpers\ViewHelperBaseTestcase;
 
 /**
@@ -202,6 +203,7 @@
      */
     public function renderReturnsSimpleTypoScriptValue(string $objectPath, array $configArray, array $subConfigArray)
     {
+        $this->stubBaseDependencies();
         $this->setArgumentsUnderTest(
             $this->viewHelper,
             [
@@ -219,8 +221,8 @@
 
         $objectManager = $this->prophesize(ObjectManager::class);
         $objectManager->get(ConfigurationManagerInterface::class)->willReturn($this->configurationManager->reveal());
+        GeneralUtility::addInstance(ContentObjectRenderer::class, $this->contentObjectRenderer->reveal());
         GeneralUtility::setSingletonInstance(ObjectManager::class, $objectManager->reveal());
-        $GLOBALS['TSFE'] = (object)['cObj' => $this->contentObjectRenderer->reveal()];
 
         $actualResult = $this->viewHelper->initializeArgumentsAndRender();
         $expectedResult = 'Hello World';
@@ -238,6 +240,6 @@
         $objectManager = $this->prophesize(ObjectManager::class);
         $objectManager->get(ConfigurationManagerInterface::class)->willReturn($this->configurationManager->reveal());
         GeneralUtility::setSingletonInstance(ObjectManager::class, $objectManager->reveal());
-        $GLOBALS['TSFE'] = (object)['cObj' => $this->contentObjectRenderer->reveal()];
+        $GLOBALS['TSFE'] = $this->getAccessibleMock(TypoScriptFrontendController::class, ['initCaches'], [], '', false);
     }
 }
